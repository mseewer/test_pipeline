on:
  workflow_dispatch:
  # schedule:
  # - cron: "0 2 * * *"
jobs:
  photos:
    name: Patch Google Photos App
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v4.7.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: '11' 
          distribution: 'corretto'
          java-package: 'jre' 

      - name: Fetch ReVanced CLI
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          # The `org/repo` containing the release.
          repo: 'ReVanced/revanced-cli'
          # The release version to fetch from in the form `tags/<tag_name>` or `<release_id>`.
          # version: # optional, default is latest
          # The name of the file to be downloaded.
          file: "revanced-cli-.*\\.jar$"
          # Use regex for file input
          regex: true
      - run: mv revanced-cli-*.jar revanced-cli.jar
      - name: Fetch ReVanced patches
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          # The `org/repo` containing the release.
          repo: 'ReVanced/revanced-patches'
          # The release version to fetch from in the form `tags/<tag_name>` or `<release_id>`.
          # version: # optional, default is latest
          # The name of the file to be downloaded.
          file: "patches-.*\\.rvp$"
          # Use regex for file input
          regex: true
      - run: ls -l
      - run: mv patches-*.rvp patches.rvp
      - name: Fetch APKs
        uses: Yakov5776/gh-apkmirror-dl@v1.3
        with:
            org: 'google-inc'
            repo: 'photos'
            #version: '3.96' -> takes the latest
            bundle: false
            filename: 'photos.apk'
      - run: mkdir -p downloads
      - name: Patch APK
        run: java -jar revanced-cli.jar patch --patches patches.rvp -o downloads/hacked_photos.apk photos.apk
      # - name: Patch APK for root
      #   run: java -jar revanced-cli.jar patch --patch-bundle revanced-patches.jar -m revanced-integrations.apk -o downloads/root_patched_youtube.apk --exclude "GmsCore support" downloads/original_youtube.apk
      - run: ls -l
      - name: fetch revanced gmscore
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          # The `org/repo` containing the release.
          repo: 'ReVanced/GmsCore'
          # The release version to fetch from in the form `tags/<tag_name>` or `<release_id>`.
          # version: # optional, default is latest
          # The name of the file to be downloaded.
          file: "app.revanced.android.gms-\\d+-signed.apk$" # app.revanced.android.gms-1-signed.apk or any number
          # Use regex for file input
          regex: true
      - run: ls -l
      - run: mv app.revanced.android.gms-*.apk downloads/GmsCore.apk
      - run: ls -l downloads/
      - name: Release
        uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "Google Photos APKs"
          body: "Viel Spass"
          files: |
            downloads//hacked_photos.apk 
            downloads/GmsCore.apk
          # downloads/root_patched_youtube.apk
          
    
